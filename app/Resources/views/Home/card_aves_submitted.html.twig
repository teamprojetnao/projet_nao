{% block title %} Accueil {% endblock %}
{% extends 'base.html.twig' %}


{% block stylesheets %}
    <style type="text/css">
        #map {
            height: 400px;
            width: 100%;
        }
        #content  .title {

            font-size: 18px;
            font-weight: 400;
            padding: 10px;
            background-color: #B8735C;
            color: white;

            border-radius: 2px 2px 0 0;
        }

        #content  .general {
            padding: 10px;
        }



    </style>
    {{ parent() }}

{% endblock %}

{% block body %}


    <section id="recherche-espece-submit">
        <div class="container">
            <div class="row">
                <div class="col-sm-4">
                    <div class="alert alert-dark">
                    {% if nbObservation > 0%}


                    <p>{{ nbObservation }} observation{{ nbObservation>1? "s":"" }} correspondant à l'espèce {{ key }} {{ nbObservation>1? "ont":"n'a" }} été {{ nbObservation>1? "trouvées":"trouvée" }}.</p>
                    {% else %}
                    <p>Aucune observation ne correspond à l'espèce {{ key }}.</p>
                    {% endif %}
                    </div>
                    <!--<form action="{{ path('aves_submit') }}" method="post">
                        <div class="form-group">
                            <label for="autocomplete">Tapez le nom d'un oiseau</label> :
                            <input name= "key" id="autocomplete" data-url="{{ path('ajax_search') }}" class="form-control">
                        </div>
                        <button type="submit" class="btn btn-primary">valider</button>
                    </form>-->
                    <div class="box-result-search">
                    {% for observation in listObservation %}
                            <div class="row result-search">
                                <div class="col-sm-4">
                                        <img class="card-img-left" id = "ma-photos" src="{{ asset('uploads/observation/' ~ observation.photo) }}"
                                             alt="Card image cap">
                                        <!--<button type="submit" class="btn btn-primary btn-bottom-view">Voir</button>-->
                                </div>
                                <div class="col-sm-8">
                                    <ul class="list-group list-group-flush">
                                        <li class="list-group-item">{{ observation.nomEspece }}</li>
                                        <li class="list-group-item">{{ observation.nbIndividus }} individu(s)</li>
                                        <li class="list-group-item">{{ observation.dateObservation | date('d-m-Y') }}</li>
                                        <li class="list-group-item">{{ observation.latitude }} ,
                                                {{ observation.longitude }} </li>
                                        <li class="list-group-item">{{ observation.user.nom }} {{ observation.user.prenom }}</li>
                                    </ul>
                                </div>
                            </div>
                            <br>
                        {% endfor %}
                    </div>

                </div>
                <div class="col-sm-8">
                    <div class="row">
                        <form action="{{ path('aves_submit') }}" method="post">
                            <div class="form-group recherche-espece">
                                <label for="autocomplete">Tapez le nom d'un oiseau</label> :
                                <input name= "key" id="autocomplete" data-url="{{ path('ajax_search') }}" class="form-control">
                            </div>
                            <button type="submit" class="btn btn-primary recherche-espece-btn">Valider</button>
                        </form>
                    </div>
                    <div id="map"></div>
                </div>

            </div>
            <!--<div class="row">

                    {% for observation in listObservation %}
                <div class="col-sm-3">
                        <div class="card text-center  ">
                            <img class="card-img-top" id = "ma-photos" src="{{ asset('uploads/observation/' ~ observation.photo) }}"
                                 alt="Card image cap">

                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">Espèce : {{ observation.nomEspece }}</li>
                                <li class="list-group-item">Nombre d'individus : {{ observation.nbIndividus }}</li>
                                <li class="list-group-item">Date : {{ observation.dateObservation | date('d-m-Y') }}</li>
                                <li class="list-group-item">Coordonnées GPS : {{ observation.latitude }} ,
                                  {{ observation.longitude }} </li>
                                <li class="list-group-item">Auteur : {{ observation.user.nom }} {{ observation.user.prenom }}</li>
                            </ul>
                        </div>
                </div>
                        <br>
                    {% endfor %}

            </div>-->


        </div>
    </section>


{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
    <script src="//code.jquery.com/jquery-1.12.4.js"></script>
    <script src="http://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="{{ asset('js/aves.js') }}"></script>
    <script src="{{ asset('slick-master/slick/slick.min.js') }}" type="text/javascript" charset="utf-8"></script>

    <script>
        var map;
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 5,
                center: new google.maps.LatLng(46.52863469527167,2.43896484375)
            });



            setMarkers(map);


        }

        // Data for the markers consisting of a name, a LatLng and a zIndex for the
        // order in which these markers should display on top of each other.
        var gps = {{ gps | raw}}


        function setMarkers(map) {

            var image = {
                url: '{{ asset('image/IconeDrapeauMaps.png') }}',
                // This marker is 20 pixels wide by 32 pixels high.
                size: new google.maps.Size(20, 32),
                // The origin for this image is (0, 0).
                origin: new google.maps.Point(0, 0),
                // The anchor for this image is the base of the flagpole at (0, 32).
                anchor: new google.maps.Point(0, 32)

            };

            var shape = {
                coords: [1, 1, 1, 20, 18, 20, 18, 1],
                type: 'poly'
            };

            var geocoder = new google.maps.Geocoder;
            var infowindow = new google.maps.InfoWindow();

            for (var i = 0; i < gps.length; i++) {
                var gpsElt = gps[i];



                var marker = new google.maps.Marker({
                    position: {lat: gpsElt[0], lng: gpsElt[1]},
                    map: map,
                    icon: image,
                    shape: shape,
                    animation : google.maps.Animation.DROP


                });




                (function(i) {
                    google.maps.event.addListener(marker, "click", function () {
                        var gpsElt=gps[i];
                        var latlng = {lat: gpsElt[0], lng: gpsElt[1]};


                        geocoder.geocode({'location': latlng}, function(results, status) {
                            if (status === 'OK') {
                                if (results[0]) {


                                    infowindow.setContent("<div id='content'><p class='title'><b>"+results[4].formatted_address+"</b></p><div class='general'><p><b>Nombre d'individus</b> :" + " " + gpsElt[2] + "</p>"
                                        + "</p>"
                                         + "<p><b>Date d'observation</b> :" + " " + gpsElt[3].date +"</p></div></div>"
                                    );

                                } else {
                                    window.alert('No results found');
                                }
                            } else {
                                window.alert('Geocoder failed due to: ' + status);
                            }


                        });
                       /* infowindow.setContent("<div id='content'><p class='title'><b>Nombre d'individus : "+gpsElt[2]+"</b></p><div class='general'><p><b>latitude</b> :" + " " + gpsElt[0] + "</p>"
                            + "</p>" + "<p><b>longitude</b> :" + " " + gpsElt[1] + "</p>"
                            + "</p>" + "<p><b>date d'observation</b> :" + " " + gpsElt[3].date + "</p></div></div>"
                        );*/
                        infowindow.open(this.getMap(), this);
                    });
                })(i);
        }








        }
    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key={{ container.parameter('api_map_key') }}&callback=initMap"></script>

{% endblock %}